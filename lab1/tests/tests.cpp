#include <gtest/gtest.h>
#include "../include/task.h"


// Тест, где граница является идеальным делителем
TEST(NewTests, PerfectBoundary)
{
    // 1000 делится на 100 без остатка, поэтому ответ должен быть 1000
    ASSERT_EQ(lab1_var15(100, 1000), 1000);
}

// Тест на "граничный" случай, когда делитель равен 1
TEST(NewTests, DivisorIsOne)
{
    // Любое число делится на 1, поэтому ответ должен быть равен границе
    ASSERT_EQ(lab1_var15(1, 98765), 98765);
}

// Тест с большим простым числом в качестве делителя
TEST(NewTests, PrimeDivisor)
{
    // Проверяем работу с некруглыми числами
    // 12345 % 97 = 26. 12345 - 26 = 12319
    ASSERT_EQ(lab1_var15(97, 12345), 12319);
}

// Тест, где граница находится очень близко к числу, которое не делится
TEST(NewTests, CloseCall)
{
    // Ближайшее число, кратное 25, которое <= 2499, это 2475
    ASSERT_EQ(lab1_var15(25, 2499), 2475);
}

// Тест с другими большими числами
TEST(NewTests, LargeNumbers)
{
    // Правильный расчет: 8103 * 1234 = 9999102
    ASSERT_EQ(lab1_var15(1234, 9999999), 9999102);
}


// Эта часть остается без изменений, она запускает все тесты
int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}